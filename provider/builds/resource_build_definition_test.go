package builds

import (
	"os"
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/helper/resource"
)

func TestAccBuildDefinitionObject_Basic(t *testing.T) {

	os.Setenv("REST_API_URI", "http://127.0.0.1:5000")
	os.Setenv("REST_API_READ_METHOD", "/api/builds/{id}")
	os.Setenv("REST_API_CREATE_METHOD", "/api/builds")
	os.Setenv("REST_API_UPDATE_METHOD", "/api/builds/{id}")
	os.Setenv("REST_API_DESTROY_METHOD", "/api/builds/{id}")
	os.Setenv("TF_LOG", "1")

	resource.UnitTest(t, resource.TestCase{
		Providers: testAccProviders,
		Steps: []resource.TestStep{
			{
				Config: testResource,
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("build_definition_resource.test", "project", "projectA"),
				),
			},
			{
				Config: testResourceUpdated,
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("build_definition_resource.test", "queue_pool", "MyHostedPool"),
				),
			},
		},
	})
}

const testResource = `
resource "build_definition_resource" "test" {
	path = "\\Autogenerated"
	project = "projectA"
    application_name = "its_my_build"
	build_template = "mytg"
	build_template_inputs = {
		"xxx" : "yyyy"
		"zzz" : "ppp"
		"myvar" : "somevar"
	}
    queue_pool = "MyPool"
    repository = "App1"
    branch = "master"
	tags = ["tag1", "tag2"]
	variables = {
		"aaa": "bbb"
		"ccc": "ddd"
	}
	variable_groups = ["MyGroup"]
	ci_triggers {
		branch_filter = ["+refs/heads/master", "+refs/heads/develop"]
	}	
}`

const testResourceUpdated = `
resource "build_definition_resource" "test" {
	path = "\\Autogenerated"
	project = "projectA"
    application_name = "its_my_build"
	build_template = "mytg"
	build_template_inputs = {
		"xxx" : "yyyy"
		"zzz" : "ppp"
		"myvar" : "somevar"
	}
    queue_pool = "MyHostedPool"
    repository = "App1"
    branch = "master"
	tags = ["tag1"]
	variable_groups = ["MyGroup"]
	ci_triggers {
		branch_filter = ["+refs/heads/master", "+refs/heads/develop"]
	}	
}`
